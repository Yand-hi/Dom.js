{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    //创建新节点\r\n    creat(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    //后面新增节点\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling)\r\n    },\r\n    //前面新增节点\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node)\r\n    },\r\n    //新增子节点\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n    //新增父节点\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n    //移除节点\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    //清空子节点\r\n    empty(node) {\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    //读写属性\r\n    attr(node, name, value) {   //重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    //读写文本内容\r\n    text(node, string) { // 适配\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    //读写HTML内容\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    //修改style样式\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            //dom.style(div, 'color')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //dom.style(div, 'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                //dom.style(div, {color: 'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //添加删除class\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    //添加事件监听\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    //删除事件监听\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    //获取父元素\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    //获取子元素\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    //获取兄弟元素\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    //获取弟弟元素\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    //获取哥哥元素\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    //遍历所有元素\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    //获取元素排名\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"],"names":[],"version":3,"file":"index.26a40173.js.map","sourceRoot":"/__parcel_source_root/"}